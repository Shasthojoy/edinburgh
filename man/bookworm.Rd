% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/bookworm.R
\name{bookworm}
\alias{bookworm}
\title{Run a bookworm query}
\usage{
bookworm(host = "localhost", port = 80, database = "federalist",
  method = "return_tsv", counttype = list("WordCount"),
  compare_limits = NULL, groups = list(), search_limits = list(),
  query = list())
}
\arguments{
\item{host}{The domain where the Bookworm lives.}

\item{port}{The port that the API lives on; usually 80.}

\item{method}{The Bookworm API method to be used. Only "return_tsv" works particularly
well at the moment.}

\item{counttype}{A list of summary statistics to calculate.}

\item{compare_limits}{The limits for a comparison. Takes the same format as search_limits. If NULL, none is passed and default behavior
is applied. (Usually the best choice for non-experts.)}

\item{groups}{A list of groupings to be applied.}

\item{search_limits}{The search constraints, expressed as a list (see below).}

\item{query}{The Bookworm query to be searched for, expressed as a list. Most of the above methods (query, groups, counttype, aesthetic, etc.)
will update fields in the query, but it can also be called directly. If the query conflicts with any of them (has a different groups element, eg),
currently the query object is the default.}
}
\value{
A data.frame consisting of the results of the call.
}
\description{
\description{Get a data.frame from a remote Bookworm server}
}
\details{
\details{This handles the dispatching, and some mild error-correcting,
on sending a query to a bookworm server and retrieving the results. There are two ways
to run the query: either by specifying the "query" object the most directly, or
by filling in the methods one at a time. The latter is easier to understand, but the other
is sometimes easier when dispatching calls programatically.}
}
\examples{
totals = bookworm(host="bookworm.htrc.illinois.edu", search_limits=list(),
groups="date_year","counttype"=list("TotalTexts"),
database="hathipd")

plot(totals[totals$date_year \%in\% 1700:2000,],type='l',main="Total works in the Hathi Trust Public Domain corpus")

totals = bookworm(host="bookworm.htrc.illinois.edu", search_limits=list(),
groups="date_year","counttype"=list("WordCount","TextCount"),
database="hathipd")
totals=totals[totals$date_year \%in\% 1700:2000,]
plot(totals$date_year,totals$WordCount/totals$TextCount,type='l',main="Average length of works in the Hathi Trust Public Domain corpus")

results = bookworm(host="bookworm.htrc.illinois.edu", search_limits=list("word" = list("evolution")),
groups="date_year","counttype"=list("WordsPerMillion"),
database="hathipd")

plot(results[results$date_year \%in\% 1700:2000,],main="Usage of 'evolution' in the Hathi Trust Public Domain corpus")
}
\author{
Benjamin Schmidt
}

